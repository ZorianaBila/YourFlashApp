<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="addCategory_icon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAABIVJREFUaEPtWUuPVEUUbsEACRDSVT0z7owGNoJ/QMIPIDEjzrhCBVYk+Ngggeim
        TXR6+nazMcCfYKVhHIIuRvvewbDnIb4ikAgbYDC4xPH7ak7dR3tvd1X3bRiS/pJK3zmn6jzuPXXOqZrK
        GGOMUR7qS5UXm5err7ciNdsM1UdBqE9x8Jm09nJ1D+fI9PWBINLbYeDhIFQL+P0bf6/2GpzTjNSF+VAd
        qi9NbBMxTx9zP01OwZiWi9FFQ5xpznVemhCxo0d9tbIB4fAxQmMl3yj9J78Gns/QOA7zHKpv8XvLzkuP
        ZqQfzof6Q8oWNaNBe3lqEgq/yzHgWjOqHm//uOMVmVqI+XDyVTh5Ai/geo6ciyP7GsEPtV1Q8EdGaahu
        4Hd6dbXygkxzBtcEHX0AX+bnjMxI/d64PLFTppUDGg9j78VKQv0EznxRv1rZJFMGxleLOzdDZoMyrXyE
        3d3SnGDYpN88hD9uhtX9wi4NQaf2JmXHekL12+mlbTVhDwZuKgiLY94Yv1x9Q9ilo9Wp7k07gbE41MY2
        2cYKY9h4vHkqno/0exw+e4RfIhtO+piw/MA8D0FxqmTMC8sJNNyuxXhXyE7A/EZq7YOBQgkx2EqEqJvc
        bMJyApz/PF6PZyE7gckhnZ2QdueE5QYsYnuQrrDTwnLGMA4Q0D9j18OBR+1LU1uF1R+I/SOx8khfHSTP
        D+uASSDpYtfR7wurP6QVsMo/EbIXhnWAwL47aWXgi3wj5N4wLXEqfFzagzyU4QCLWUrGilMrzn4+XoTm
        S8jeKMMBAmvvWDlI47uFXIzmsnonUawWhOyNshxAGF20clqhelvIxcgUL7TBQs7AFikYZk5cBeP7WA6f
        8+eY0avYoTKfs3LYcgu5GMj5n9kFRfm3q0iVNXKLHehxUcPe/FTIxXjuHciGkDor5AxMLw+F+LzmxJU/
        dBQrxnP+HBmhPlhaCMGBWbtgvW1iHoCEXAxefcQL1lkabXfUa0Iuxloh04/sIp5hheWFMhwwJ8FExsr5
        85WNwuoNxN0FuxDOnBCyF0pxgGk2lqG+FnJ/8NLJLkQMXnt2zZy5NDAymPmE1R+8MUuHkdPm6cKwDmST
        iV7xaqcJeB9YAQipX57mgYa6kPOT65ZQfyksd8htxMNYCAqKsJzQVez8jpTplxfq+40r27Ww/MDCERvB
        gzYO3MLqi7jY9ShSeYDjb2HNv4ne2lFh+YMbKVNIQvUPrz6EXTqCqLaPOlL6FgZJIBnwrpLXfVYo9sNj
        ny/hCr75LuN/HTh0usGTEQy/mwg39zYN342dh/rSy1tgbJAJm0j9NWgBLcTa8S75EqLoJg8ZDDWZ5gyu
        MakSbzojE3+XbrwFL5igZDGj0CjV17FXTrpcyK5dFPMgkxSpRI5aKC1sisBNBWOPQeGD/xmAAd5t/C6y
        DcawLTOekQxSjVl6MFUy2wy9YX0gX6MB5UnF9hxmLYrUyN96L7DE89KJ9zYwJvffTpnBOWjMWOi824NR
        g+0urz7gzIwpgvbg3tEfcLOzn3duiccYYwwHVCr/AaKzPmDQGeYJAAAAAElFTkSuQmCC
</value>
  </data>
</root>